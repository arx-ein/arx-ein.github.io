---
import { Breadcrumbs } from "astro-breadcrumbs";
import "astro-breadcrumbs/breadcrumbs.css";

const SunPath = "M40 0 74.641 20 74.641 60 40 80 5.359 60 5.359 20Z";
const MoonPath = "M40 0 74.641 20 74.641 60 40 80 5.359 60 40 40Z";
---
<header class="border-0 border-b-2 border-b-fore dark:border-b-fore-dark">
    <nav class="px-4 py-2 sm:py-4">
        <div class="flex flex-wrap justify-start items-center">
            <a href="/" class="py-2 flex-none flex items-center group">
                <svg
                    class="h-8 sm:h-12 stroke-fore dark:stroke-fore-dark group-hover:stroke-fore-dim
                        transition-colors duration-100 motion-reduce:transition-none fill-none"
                    style="stroke-linecap:round;stroke-linejoin:round;"
                    viewBox="0 0 100 80"
                >
                    <g
                        id="hex"
                        transform="matrix(-1,0,0,1,72.7,0)"
                        class="stroke-2"
                        style="stroke-linecap:round;stroke-linejoin:round;"
                    >
                        <path
                            id="hexagon"
                            style="stroke-width:2.5;"
                            d="m 15.01,26.03 8.07,-13.97 32.27,-0 16.14,27.95 -16.13,27.95 -32.27,0 -8.07,-13.97"
                        ></path>
                        <path
                            d="m 39.21,40 c 0,0 -1.29,-5.41 -2.47,-7.91 -0.72,-1.53 -2.01,-2.74 -2.77,-4.26 -0.92,-1.86 -1.02,-4.08 -2.1,-5.85 -1.27,-2.07 -3.3,-3.56 -5,-5.3 -1.41,-1.45 -4.29,-4.28 -4.29,-4.28"
                            id="hypha-1"
                        >
                        </path>
                        <path
                            d="m 39.21,40 c 0,0 4.66,-4.08 6.12,-6.74 0.97,-1.76 0.66,-4.04 1.61,-5.81 0.73,-1.36 2.38,-2.09 3.02,-3.49 0.77,-1.68 0.1,-3.79 0.8,-5.5 0.98,-2.39 4.61,-6.24 4.61,-6.24"
                            id="hypha-2"
                        >
                        </path>
                        <path
                            d="m 39.21,40 c 0,0 4.66,2 7.13,2 1.9,-0 3.6,-1.35 5.49,-1.55 3.6,-0.38 8.12,3.09 10.85,0.7 0.58,-0.51 -0.45,-1.83 0.16,-2.3 2.39,-1.84 8.89,1.67 8.89,1.67"
                            id="hypha-3"
                        >
                        </path>
                        <path
                            d="m 39.21,40 c 0,0 1.54,4.79 2.63,7.05 0.82,1.7 1.8,3.32 2.91,4.84 1.3,1.77 3.18,3.07 4.36,4.92 1.33,2.1 1.56,4.78 2.93,6.85 1.06,1.59 3.98,4.1 3.98,4.1"
                            id="hypha-4"
                        >
                        </path>
                        <path
                            d="m 23.08,67.95 c 0,0 2.72,-4.12 4.2,-6.09 1.26,-1.68 3.18,-2.94 3.99,-4.88 0.69,-1.64 -0.09,-3.64 0.57,-5.29 1.11,-2.78 3.98,-4.53 5.48,-7.12 0.83,-1.43 1.9,-4.57 1.9,-4.57"
                            id="hypha-5"
                        >
                        </path>
                        <path d="m 34.38,17.84 c -3.59,-1.38 -3.28,2.38 -2.51,4.14" id="branch-1">
                        </path>
                        <path d="M 46.14,30.42 C 44.66,26.85 40.89,25.31 43.52,22.22" id="branch-2">
                        </path>
                        <path d="m 44.76,51.89 c -0.57,2.67 -3.28,2.38 -2.51,4.14" id="branch-4">
                        </path>
                        <circle style="stroke-width:1.2;" id="spore" cy="57.70" cx="42.85" r="1.32">
                        </circle>
                    </g>
                    <g
                        id="arrow"
                        class="transition-transform duration-200 group-hover:translate-x-3 inline stroke-[2.5]
                            motion-reduce:transition-none motion-reduce:group-hover:transform-none"
                    >
                        <path d="m 46.33,40 32.41,0" id="base"> </path>
                        <path d="M 62.61,12.05 78.74,40 62.61,67.95" id="head"> </path>
                    </g>
                </svg>
                <span
                    id="logo"
                    class="self-center text-2xl sm:text-4xl leading-8 whitespace-nowrap
                        group-hover:text-fore-dim transition-colors duration-100 motion-reduce:transition-none"
                    >mycelithyl-hyphae</span
                >
            </a>
            <Breadcrumbs indexText="" linkTextFormat="capitalized">
                <svg
                    slot="separator"
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <polyline points="9 18 15 12 9 6"></polyline>
                </svg>
            </Breadcrumbs>
            <!-- <ol class="">
                {
                    lists.map((list: ListItem, index: number) => (
                        <li class="inline">
                            {lists.length - 1 !== index ? (
                                <a href={`/${list.path}`}>{list.name}</a>
                            ) : (
                                <span>{list.name}</span>
                            )}
                        </li>
                    ))
                }
            </ol> -->
            <div class="flex-auto"></div>
            <div class="flex-initial text-right select-none">
                <div class="cursor-pointer" id="lightswitch">
                    <svg
                        viewBox="0 0 80 80"
                        class="h-7 sm:h-8 stroke-5 stroke-fore dark:stroke-fore-dark
                            text-transparent fill-current transition-colors duration-100
                            motion-reduce:transition-none
                            hover:text-fore dark:hover:text-fore-dark"
                        style="stroke-linecap:round;stroke-linejoin:round;"
                    >
                        <path
                            id="outline"
                            d={SunPath}
                            transform-origin="40 40"
                            transform="scale(0.375)"
                            class="stroke-2 transition-[d,transform] ease-in-out duration-350 motion-reduce:transition-none"
                            vector-effect="non-scaling-stroke"
                        ></path>
                        <g id="rays" class="opacity-100 transition-opacity ease-linear duration-350 motion-reduce:transition-none">
                            <path id="ray" d="M40 4v12"></path>
                            {
                                [60, 120, 180, 240, 300].map((angle) => (
                                    <use href="#ray" transform={`rotate(${angle} 40 40)`} />
                                ))
                            }
                        </g>
                    </svg>
                </div>
            </div>
        </div>
    </nav>
</header>
<style>
    @import url("https://fonts.googleapis.com/css2?family=La+Belle+Aurore&display=swap");
    span#logo {
        font-family: "La Belle Aurore", "Segoe Script", "Zapfino", "Candara", serif;
        font-weight: 400;
        font-style: normal;
    }
    path#outline.night {
        d: path("M40 0 74.641 20 74.641 60 40 80 5.359 60 40 40Z"); /* MoonPath */
        transform: scale(0.9);
    }
    g#rays.night {
        opacity: 0;
    }
</style>
<script>
    const OutLine = document.getElementById("outline") as SVGPathElement | null;
    const Rays = document.getElementById("rays") as SVGGElement | null;
    const darkModeOff = () => {
        document.documentElement.classList.remove("dark");
        sessionStorage.setItem("darkMode", "off");
        [OutLine, Rays].forEach((elem) => {
            elem?.classList.remove("night");
        })
    };
    const darkModeOn = () => {
        document.documentElement.classList.add("dark");
        sessionStorage.setItem("darkMode", "on");
        [OutLine, Rays].forEach((elem) => {
            elem?.classList.add("night");
        })
    };
    const toggleDarkMode = () => {
        if (sessionStorage.getItem("darkMode") === "on") {
            darkModeOff();
        } else if (sessionStorage.getItem("darkMode") === "off") {
            darkModeOn();
        }
    };

    const lightSwitch = document.getElementById("lightswitch")!;
    lightSwitch.addEventListener("click", () => {
        toggleDarkMode();
    });

    if (sessionStorage.getItem("darkMode") === "on") {
        darkModeOn();
    } else if (sessionStorage.getItem("darkMode") === "off") {
        darkModeOff();
    } else if (sessionStorage.getItem("darkMode") === null) {
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            darkModeOn();
        } else {
            darkModeOff();
        }
    }
</script>
